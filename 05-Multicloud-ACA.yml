#
# The output generated by this tool should be used as a base for further
# modifications. It does not make assumptions as to what things can be made into
# variables, modules, partials or Jinja templates. This is your responsibility as
# the owner of the template.
#
# Some recommendations to massage the initial output:
#
# * Rename the pipeline stage IDs, notification names and trigger names to be
#   more meaningful. Enumerated stage IDs is ultimately a detriment for
#   long-term maintainability.
# * The template is currently ordered, so keys may not necessarily be structured
#   in the most sensible format. You may want to massage the template a little.

INFO[0000] configuration:
  concurrentExecutions:
    limitConcurrent: true
    parallel: false
id: multicloud-04AutomatedCanary
metadata:
  description: This template does not have a description
  name: 04-Automated-Canary
  owner: opsmxemp1
  scopes:
  - multicloud
protect: false
schema: "1"
stages:
- config:
    baseline: {}
    canary:
      application: multicloud
      canaryConfig:
        canaryAnalysisConfig:
          beginCanaryAnalysisAfterMins: "0"
          canaryAnalysisIntervalMins: "30"
          lookbackMins: 0
          name: multimetric
          notificationHours: []
          useLookback: false
        canaryHealthCheckHandler:
          '@class': com.netflix.spinnaker.mine.CanaryResultHealthCheckHandler
          minimumCanaryResultScore: "60"
        canarySuccessCriteria:
          canaryResultScore: "80"
        combinedCanaryResultStrategy: AGGREGATE
        lifetimeHours: "0.6"
        name: anush
      canaryDeployments:
      - '@class': .CanaryTaskDeployment
        accountName: opsmx-v2-opsmx-account
        baseline: ${#stage("Baseline Deploy")["outputs"]["outputs.createdArtifacts"][0]["reference"]}
        canary: ${#stage("Canary Deploy")["outputs"]["outputs.createdArtifacts"][0]["reference"]}
        type: cluster
      owner: anush@opsmx.com
      watchers: []
  dependsOn:
  - deployManifest2
  - deployManifest3
  id: acaTask1
  inheritanceControl: {}
  inject: {}
  name: Canary Analysis
  type: acaTask
- config:
    account: opsmx-v2-opsmx-account
    cloudProvider: kubernetes
    manifestArtifactAccount: embedded-artifact
    manifests:
    - apiVersion: extensions/v1beta1
      kind: Deployment
      metadata:
        name: baseline
        namespace: production
      spec:
        replicas: 1
        selector:
          matchLabels:
            app: common
            restapplication: "true"
            version: "1.0"
        strategy:
          type: Recreate
        template:
          metadata:
            labels:
              app: common
              restapplication: "true"
              version: "1.0"
          spec:
            containers:
            - image: docker.io/opsmx11/restapp:img50
              imagePullPolicy: Always
              name: restapp
              ports:
              - containerPort: 8080
                name: http
                protocol: TCP
              - containerPort: 9090
                name: prometheus
                protocol: TCP
    - apiVersion: v1
      kind: Service
      metadata:
        name: common
        namespace: production
      spec:
        ports:
        - name: canary
          port: 8080
          protocol: TCP
          targetPort: 8080
        - name: reports
          port: 9090
          protocol: TCP
          targetPort: 9090
        selector:
          app: common
        type: NodePort
    moniker:
      app: multicloud
    relationships:
      loadBalancers: []
      securityGroups: []
    source: text
  id: deployManifest2
  inheritanceControl: {}
  inject: {}
  name: Baseline Deploy
  type: deployManifest
- config:
    account: opsmx-v2-opsmx-account
    cloudProvider: kubernetes
    manifestArtifactAccount: embedded-artifact
    manifests:
    - apiVersion: extensions/v1beta1
      kind: Deployment
      metadata:
        name: canary
        namespace: production
      spec:
        replicas: 1
        selector:
          matchLabels:
            app: common
            restapplication: "true"
            version: "1.0"
        strategy:
          type: Recreate
        template:
          metadata:
            labels:
              app: common
              restapplication: "true"
              version: "1.0"
          spec:
            containers:
            - image: docker.io/opsmx11/restapp:img100
              imagePullPolicy: Always
              name: restapp
              ports:
              - containerPort: 8080
                name: http
                protocol: TCP
              - containerPort: 9090
                name: prometheus
                protocol: TCP
    moniker:
      app: multicloud
    relationships:
      loadBalancers: []
      securityGroups: []
    source: text
  dependsOn:
  - deployManifest2
  id: deployManifest3
  inheritanceControl: {}
  inject: {}
  name: Canary Deploy
  type: deployManifest
- config:
    account: openshift-v2-account
    cloudProvider: kubernetes
    manifestArtifactAccount: embedded-artifact
    manifests:
    - apiVersion: extensions/v1beta1
      kind: Deployment
      metadata:
        name: current
        namespace: production
      spec:
        replicas: 3
        selector:
          matchLabels:
            app: current
            restapplication: "true"
            version: "1.0"
        strategy:
          type: Recreate
        template:
          metadata:
            labels:
              app: current
              restapplication: "true"
              version: "1.0"
          spec:
            containers:
            - image: docker.io/opsmx11/restapp:dev-log-1.0
              imagePullPolicy: Always
              name: restapp
              ports:
              - containerPort: 8080
                name: http
                protocol: TCP
              - containerPort: 9090
                name: prometheus
                protocol: TCP
    moniker:
      app: multicloud
    relationships:
      loadBalancers: []
      securityGroups: []
    source: text
  dependsOn:
  - manualJudgment6
  id: deployManifest4
  inheritanceControl: {}
  inject: {}
  name: Openshift Deploy
  type: deployManifest
- config:
    failPipeline: true
    judgmentInputs: []
    notifications: []
  dependsOn:
  - acaTask1
  id: manualJudgment6
  inheritanceControl: {}
  inject: {}
  name: Manual Judgment
  type: manualJudgment

