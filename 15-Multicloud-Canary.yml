id: multicloud-15MulticloudCanary
metadata:
  description: Automated canary analysis which deploys to production on success
  name: 15-Multicloud-Canary
  owner: anonymous
  scopes:
  - global
protect: false
schema: "1"
variables:
- name: baseimageid
  description: ID and tag of the image to be compared against.
  defaultValue: docker.io/opsmx11/restapp:img50
- name: canaryimageid
  description: ID and tag of the image to be evaluated.
  defaultValue: docker.io/opsmx11/restapp:img100
- name: porttoopen
  description: The port through which container can be accessed. 
  defaultValue: 8080
- name: username
  description: Registered username of the OpsMx user.
  defaultValue: OpsMxUser
- name: metrictemp
  description: The template name of the metric template created.
  defaultValue: metrictemp
- name: logtemp
  description: The template name of the log template created.
  defaultValue: logtemp
- name: canarylifetime
  description: The time window in hours of the canary analysis.
  defaultValue: "0.5"
stages:
- config:
    baseline: {}
    canary:
      application: multicloud
      canaryConfig:
        canaryAnalysisConfig:
          beginCanaryAnalysisAfterMins: "0"
          canaryAnalysisIntervalMins: "30"
          lookbackMins: 0
          name: "{{ metrictemp }}"
          notificationHours: []
          useLookback: false
        canaryHealthCheckHandler:
          '@class': com.netflix.spinnaker.mine.CanaryResultHealthCheckHandler
          minimumCanaryResultScore: "60"
        canarySuccessCriteria:
          canaryResultScore: "80"
        combinedCanaryResultStrategy: AGGREGATE
        lifetimeHours: "{{ canarylifetime }}"
        name: "{{ username }}"
      canaryDeployments:
      - '@class': .CanaryTaskDeployment
        accountName: opsmx-v2-opsmx-account
        baseline: ${#stage("Baseline Deploy")["outputs"]["outputs.createdArtifacts"][0]["reference"]}
        canary: ${#stage("Canary Deploy")["outputs"]["outputs.createdArtifacts"][0]["reference"]}
        type: cluster
      owner: anush@opsmx.com
      watchers: []
  dependsOn:
  - deployManifest2
  - deployManifest3
  id: acaTask1
  inheritanceControl: {}
  inject: {}
  name: Canary Analysis
  type: acaTask
- config:
    account: opsmx-v2-opsmx-account
    cloudProvider: kubernetes
    manifestArtifactAccount: embedded-artifact
    manifests:
    - apiVersion: extensions/v1beta1
      kind: Deployment
      metadata:
        name: baseline
        namespace: production
      spec:
        replicas: 1
        revisionHistoryLimit: 3
        selector:
          matchLabels:
            app: common
        strategy:
          type: RollingUpdate
        template:
          metadata:
            labels:
              app: common
          spec:
            containers:
            - image: "{{ baseimageid }}"
              imagePullPolicy: Always
              name: restapp
              ports:
              - containerPort: 8080
                name: http
                protocol: TCP
              - containerPort: 9090
                name: prometheus
                protocol: TCP
    - apiVersion: v1
      kind: Service
      metadata:
        name: common
        namespace: production
      spec:
        ports:
        - name: canary
          port: 8080
          protocol: TCP
          targetPort: 8080
        - name: reports
          port: 9090
          protocol: TCP
          targetPort: 9090
        selector:
          app: common
        type: NodePort
    moniker:
      app: multicloud
    relationships:
      loadBalancers: []
      securityGroups: []
    source: text
  dependsOn:
  - deployManifest9
  id: deployManifest2
  inheritanceControl: {}
  inject: {}
  name: Baseline Deploy
  type: deployManifest
- config:
    account: opsmx-v2-opsmx-account
    cloudProvider: kubernetes
    manifestArtifactAccount: embedded-artifact
    manifests:
    - apiVersion: extensions/v1beta1
      kind: Deployment
      metadata:
        name: canary
        namespace: production
      spec:
        replicas: 1
        revisionHistoryLimit: 3
        selector:
          matchLabels:
            app: common
        strategy:
          type: RollingUpdate
        template:
          metadata:
            labels:
              app: common
          spec:
            containers:
            - image: "{{ canaryimageid }}"
              imagePullPolicy: Always
              name: restapp
              ports:
              - containerPort: 8080
                name: http
                protocol: TCP
              - containerPort: 9090
                name: prometheus
                protocol: TCP
    moniker:
      app: multicloud
    relationships:
      loadBalancers: []
      securityGroups: []
    source: text
  dependsOn:
  - deployManifest9
  id: deployManifest3
  inheritanceControl: {}
  inject: {}
  name: Canary Deploy
  type: deployManifest
- config:
    account: my-k8s-v2-account
    cloudProvider: kubernetes
    manifestArtifactAccount: embedded-artifact
    manifests:
    - apiVersion: extensions/v1beta1
      kind: Deployment
      metadata:
        name: current
        namespace: production
      spec:
        replicas: 3
        selector:
          matchLabels:
            app: current
            restapplication: "true"
            version: "1.0"
        strategy:
          type: Recreate
        template:
          metadata:
            labels:
              app: current
              restapplication: "true"
              version: "1.0"
          spec:
            containers:
            - image: "{{ canaryimageid }}"
              imagePullPolicy: Always
              name: restapp
              ports:
              - containerPort: 8080
                name: http
                protocol: TCP
              - containerPort: 9090
                name: prometheus
                protocol: TCP
    moniker:
      app: multicloud
    relationships:
      loadBalancers: []
      securityGroups: []
    source: text
  dependsOn:
  - manualJudgment6
  id: deployManifest4
  inheritanceControl: {}
  inject: {}
  name: Production Deploy
  type: deployManifest
- config:
    failPipeline: true
    judgmentInputs: []
    notifications: []
  dependsOn:
  - acaTask1
  id: manualJudgment6
  inheritanceControl: {}
  inject: {}
  name: Manual Judgment
  type: manualJudgment
- config:
    account: opsmx-v2-opsmx-account
    cloudProvider: kubernetes
    kinds: []
    location: production
    manifestName: deployment baseline
    options:
      cascading: true
  dependsOn:
  - manualJudgment6
  id: deleteManifest7
  inheritanceControl: {}
  inject: {}
  name: Delete Baseline
  type: deleteManifest
- config:
    account: opsmx-v2-opsmx-account
    cloudProvider: kubernetes
    kinds: []
    location: production
    manifestName: deployment canary
    options:
      cascading: true
  dependsOn:
  - manualJudgment6
  id: deleteManifest8
  inheritanceControl: {}
  inject: {}
  name: Delete Canary
  type: deleteManifest
- config:
    account: opsmx-v2-opsmx-account
    cloudProvider: kubernetes
    manifestArtifactAccount: opsmx-restapp-account
    manifests:
    - apiVersion: v1
      kind: Service
      metadata:
        name: commonlb
        namespace: production
      spec:
        ports:
        - name: canary
          port: 8080
          protocol: TCP
          targetPort: 8080
        - name: reports
          port: 9090
          protocol: TCP
          targetPort: 9090
        selector:
          app: common
        type: NodePort
    moniker:
      app: multicloud
    relationships:
      loadBalancers: []
      securityGroups: []
    source: text
  id: deployManifest9
  inheritanceControl: {}
  inject: {}
  name: Deploy Common LB
  type: deployManifest
